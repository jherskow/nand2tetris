<class>
  <keyword> class </keyword>
  <identifier> CaveShooterMain </identifier>
  <symbol> { </symbol>
<subroutineDec>
    <keyword> function </keyword>
    <keyword> void </keyword>
    <identifier> main </identifier>
    <symbol> ( </symbol>
  <parameterList>
    </parameterList>
  <symbol> ) </symbol>
  <subroutineBody>
  <symbol> { </symbol>  
  <varDec>
      <keyword> var </keyword>
      <identifier> GameControl </identifier>
      <identifier> game </identifier>
      <symbol> ; </symbol>
    </varDec>
  <statements>
    <letStatement>
        <keyword> let </keyword>
          <identifier> game </identifier>
          <symbol> = </symbol>      
        <expression>
              <term>
                        <identifier> GameControl </identifier>
                        <symbol> . </symbol>
                        <identifier> new </identifier>
                        <symbol> ( </symbol>
                      <expressionList>
                      </expressionList>
                      <symbol> ) </symbol>
                      </term>
              </expression>
        <symbol> ; </symbol>
        </letStatement>
    <doStatement>
          <keyword> do </keyword>
          <identifier> game </identifier>
          <symbol> . </symbol>
          <identifier> start </identifier>
          <symbol> ( </symbol>
        <expressionList>
        </expressionList>
        <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
    <doStatement>
          <keyword> do </keyword>
          <identifier> game </identifier>
          <symbol> . </symbol>
          <identifier> dispose </identifier>
          <symbol> ( </symbol>
        <expressionList>
        </expressionList>
        <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
    <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
    </statements>
  <symbol> } </symbol>
  </subroutineBody>
  </subroutineDec>
  <symbol> } </symbol>
</class>