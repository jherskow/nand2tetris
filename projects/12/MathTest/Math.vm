function Math.init 0
push constant 16
call Array.new 1
pop static 0
push static 0
push constant 0
push constant 1
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 1
push constant 2
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 2
push constant 4
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 3
push constant 8
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 4
push constant 16
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 5
push constant 32
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 6
push constant 64
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 7
push constant 128
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 8
push constant 256
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 9
push constant 512
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 10
push constant 1024
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 11
push constant 2048
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 12
push constant 4096
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 13
push constant 8192
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 14
push constant 16384
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push static 0
push constant 15
push constant 16384
push constant 16384
add
pop temp 1
add
pop pointer 1
push temp 1
pop that 0
push constant 0
return
function Math.bit 1
push argument 0
push static 0
push argument 1
add
pop pointer 1
push that 0
and
push constant 0
eq
not
pop local 0
push local 0
return
function Math.abs 0
push argument 0
push constant 0
gt
not
if-goto ifElse0
push argument 0
return
goto ifEnd0
label ifElse0
label ifEnd0
push argument 0
neg
return
function Math.multiply 3
push constant 0
pop local 0
push argument 0
pop local 1
push constant 0
pop local 2
label whileStart0
push local 2
push constant 16
lt
not
if-goto whileEnd0
push argument 1
push local 2
push pointer 0
call Math.bit 3
not
if-goto ifElse1
push local 0
push local 1
add
pop local 0
goto ifEnd1
label ifElse1
label ifEnd1
push local 1
push local 1
add
pop local 1
push local 2
push constant 1
add
pop local 2
goto whileStart0
label whileEnd0
push local 0
return
function Math.divide 4
push argument 0
push constant 0
gt
pop local 2
push argument 1
push constant 0
gt
pop local 3
push argument 0
push pointer 0
call Math.abs 2
pop argument 0
push argument 1
push pointer 0
call Math.abs 2
pop argument 1
push argument 1
push argument 0
gt
not
if-goto ifElse2
push constant 0
return
goto ifEnd2
label ifElse2
label ifEnd2
push argument 0
push argument 1
push argument 1
add
push pointer 0
call Math.divide 3
pop local 1
push argument 0
push constant 2
push local 1
call Math.multiply 2
push argument 1
call Math.multiply 2
sub
push argument 1
lt
not
if-goto ifElse3
push local 1
push local 1
add
pop local 0
goto ifEnd3
label ifElse3
push local 1
push local 1
add
push constant 1
add
pop local 0
label ifEnd3
push local 2
push local 3
eq
not
if-goto ifElse4
push local 0
return
goto ifEnd4
label ifElse4
push local 0
neg
return
label ifEnd4
function Math.sqrt 3
push constant 7
pop local 1
push constant 0
pop local 0
label whileStart1
push local 1
push constant 0
lt
not
not
if-goto whileEnd1
push local 0
push static 0
push local 1
add
pop pointer 1
push that 0
add
push local 0
push static 0
push local 1
add
pop pointer 1
push that 0
add
call Math.multiply 2
pop local 2
push local 2
push argument 0
gt
not
push local 2
push constant 0
gt
and
not
if-goto ifElse5
push local 0
push static 0
push local 1
add
pop pointer 1
push that 0
add
pop local 0
goto ifEnd5
label ifElse5
label ifEnd5
push local 1
push constant 1
sub
pop local 1
goto whileStart1
label whileEnd1
push local 0
return
function Math.max 0
push argument 0
push argument 1
gt
not
if-goto ifElse6
push argument 0
return
goto ifEnd6
label ifElse6
label ifEnd6
push argument 1
return
function Math.min 0
push argument 0
push argument 1
lt
not
if-goto ifElse7
push argument 0
return
goto ifEnd7
label ifElse7
label ifEnd7
push argument 1
return
